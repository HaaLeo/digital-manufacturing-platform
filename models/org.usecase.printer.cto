/**
 * Business Model for the 3D Printer use case
 */

namespace org.usecase.printer

abstract participant Stakeholder identified by stakeholderID {
    o String stakeholderID
    o String pubKey

}

participant Enduser extends Stakeholder {
    o String firstName
    o String lastName
    o String contactInformation
    --> Cash cash
}

participant Designer extends Stakeholder {
    o String firstName
    o String lastName
    o String contactInformation
    --> Cash cash
}

participant DataAnalyst extends Stakeholder {
    o String name
}

participant Printer extends Stakeholder {
    o String name
    --> Manufacturer printerManufacturer
}

participant Manufacturer extends Stakeholder {
  o String name
}

enum OwnerEntity {
  o Enduser
  o Designer
}

//This class represents a "wallet" of a Trader
asset Cash identified by cashID {
    o String cashID
    o String currency
    o Double value
    o String ownerID
    o OwnerEntity ownerEntity
}

//This class represents a Master-Blueprint stored on BCDB
asset BlueprintMaster identified by blueprintMasterID {
    o String blueprintMasterID
    o String txID
    o String checksum
    o Double price
    o String metadata
    --> Designer owner
}

//This class represents a printingJob
asset PrintingJob identified by printingJobID {
    o String printingJobID
    o String txID
    o String checksum
    o Boolean printed
    o String otpEncryptedWithDesignerPubKey
    o String otpEncryptedWithPrinterPubKey
    --> Printer printer
    --> Enduser buyer
    --> BlueprintMaster blueprintMaster
    --> Stakeholder owner
    --> QualityRequirement qualityRequirement
}

asset QualityRequirement identified by qualityRequirementID {
	o String qualityRequirementID
	o String name
    o String txID
    --> Enduser owner
}

asset QualityReport identified by qualityReportID {
	o String qualityReportID
    o String txID
    o String databaseHash
    --> Manufacturer owner
    --> PrintingJob printingJob
}

asset EvaluationResult identified by evaluationResultID {
	o String evaluationResultID
    o String txID
    o Boolean requirementsMet
    --> Stakeholder customer
    --> PrintingJob printingJob
	--> QualityReport qualityReport
}

// Transaction after succesful printing
transaction ConfirmTransaction {
    --> PrintingJob printingJob
}

transaction CancelRequest {
    --> PrintingJob printingJob
}

transaction ConfirmPrintingJob {
    o String txID
    o String checksum
    --> PrintingJob printingJob
}

transaction RequestBlueprint {
    --> Enduser buyer
    --> Printer printer
    --> BlueprintMaster blueprintMaster
    --> QualityRequirement qualityRequirement
}

transaction EvaluateReport {
	--> PrintingJob printingJob // includes Quality Requirement and BlueprintMaster
	--> Stakeholder customer
	--> QualityReport qualityReport
}

// NOT USED
transaction AddNewBlueprintMaster {
    o String blueprintMasterID
    o String assetHash
    o Double price
    o String metadata
    --> Designer owner
}
